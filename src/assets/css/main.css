/*
! tailwindcss v3.4.6 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Interphases, ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: 'slnt' 0;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(8, 71, 150, 0.5);
  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);
  --tw-ring-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow-colored: 0 0 rgba(0,0,0,0);
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(8, 71, 150, 0.5);
  --tw-ring-offset-shadow: 0 0 rgba(0,0,0,0);
  --tw-ring-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow: 0 0 rgba(0,0,0,0);
  --tw-shadow-colored: 0 0 rgba(0,0,0,0);
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/* .bg-sketch {
		background-image: url(/assets/noise.png);
	} */

.linkify a {
  font-weight: 600;
  color: #fff;
  text-decoration-line: underline;
  text-decoration-color: #4291F5;
  text-decoration-thickness: 2px;
  text-underline-offset: 4px;
  outline-width: 0px;
  transition-duration: 200ms;
}

@media (hover: hover) and (pointer: fine) {
  .linkify a:hover {
    color: #4291F5;
    text-decoration-color: #084796;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.visible {
  visibility: visible;
}

.collapse {
  visibility: collapse;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.inset-y-4 {
  top: 1rem;
  bottom: 1rem;
}

.left-4 {
  left: 1rem;
}

.top-0 {
  top: 0px;
}

.top-12 {
  top: 3rem;
}

.top-6 {
  top: 1.5rem;
}

.z-0 {
  z-index: 0;
}

.z-10 {
  z-index: 10;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mb-12 {
  margin-bottom: 3rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.ml-auto {
  margin-left: auto;
}

.mt-16 {
  margin-top: 4rem;
}

.mt-72 {
  margin-top: 18rem;
}

.block {
  display: block;
}

.table {
  display: table;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.size-full {
  width: 100%;
  height: 100%;
}

.h-10 {
  height: 2.5rem;
}

.h-12 {
  height: 3rem;
}

.h-72 {
  height: 18rem;
}

.h-\[50svh\] {
  height: 50svh;
}

.h-\[fill-available\] {
  height: -webkit-fill-available;
  height: -moz-available;
  height: fill-available;
}

.w-1 {
  width: 0.25rem;
}

.w-full {
  width: 100%;
}

.max-w-\[65ch\] {
  max-width: 65ch;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.resize {
  resize: both;
}

.scroll-m-8 {
  scroll-margin: 2rem;
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * (1 - 0));
  margin-top: calc(0.5rem * (1 - var(--tw-space-y-reverse)));
  margin-top: calc(0.5rem * calc(1 - 0));
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * 0);
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * (1 - 0));
  margin-top: calc(2rem * (1 - var(--tw-space-y-reverse)));
  margin-top: calc(2rem * calc(1 - 0));
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * 0);
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}

.overflow-hidden {
  overflow: hidden;
}

.scroll-smooth {
  scroll-behavior: smooth;
}

.text-wrap {
  text-wrap: wrap;
}

.text-pretty {
  text-wrap: pretty;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.border {
  border-width: 1px;
}

.border-t-4 {
  border-top-width: 4px;
}

.border-white {
  border-color: #fff;
}

.border-white\/10 {
  border-color: rgba(255, 255, 255, 0.1);
}

.bg-brand-800 {
  background-color: #04254E;
}

.bg-brand-900 {
  background-color: #031935;
}

.bg-brand-900\/50 {
  background-color: rgba(3, 25, 53, 0.5);
}

.bg-fixed {
  background-attachment: fixed;
}

.fill-brand-100 {
  fill: #D3E6FD;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.object-\[50\%_15\%\] {
  -o-object-position: 50% 15%;
     object-position: 50% 15%;
}

.p-12 {
  padding: 3rem;
}

.p-6 {
  padding: 1.5rem;
}

.p-8 {
  padding: 2rem;
}

.pb-12 {
  padding-bottom: 3rem;
}

.pb-24 {
  padding-bottom: 6rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pb-48 {
  padding-bottom: 12rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pt-8 {
  padding-top: 2rem;
}

.text-default {
  font-size: clamp(1.125rem, 1.034rem + 0.29vw, 1.5rem);
  line-height: 1.5;
}

.text-heading {
  font-size: clamp(1.375rem, 1.284rem + 0.29vw, 1.75rem);
  line-height: 1.3;
}

.font-bold {
  font-weight: 700;
}

.font-semibold {
  font-weight: 600;
}

.tracking-\[-0\.0125em\] {
  letter-spacing: -0.0125em;
}

.tracking-\[0\.0125em\] {
  letter-spacing: 0.0125em;
}

.text-brand-100 {
  color: #D3E6FD;
}

.text-white {
  color: #fff;
}

.underline {
  text-decoration-line: underline;
}

.\!no-underline {
  text-decoration-line: none !important;
}

.decoration-brand-300 {
  text-decoration-color: #4291F5;
}

.decoration-2 {
  text-decoration-thickness: 2px;
}

.underline-offset-4 {
  text-underline-offset: 4px;
}

.opacity-85 {
  opacity: 0.85;
}

.outline {
  outline-style: solid;
}

.outline-0 {
  outline-width: 0px;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

/* 8px min and 16px max */

.spacer-xs,
	.spacer-t-xs {
  padding-top: clamp(0.5rem, 0.308rem + 0.77vw, 1rem);
}

.spacer-xs,
	.spacer-b-xs {
  padding-bottom: clamp(0.5rem, 0.308rem + 0.77vw, 1rem);
}

/* 16px min and 32px max */

.spacer-sm,
	.spacer-t-sm {
  padding-top: clamp(1rem, 0.615rem + 1.54vw, 2rem);
}

.spacer-sm,
	.spacer-b-sm {
  padding-bottom: clamp(1rem, 0.615rem + 1.54vw, 2rem);
}

/* 32px min and 64px max */

.spacer,
	.spacer-t {
  padding-top: clamp(2rem, 1.231rem + 3.08vw, 4rem);
}

.spacer,
	.spacer-b {
  padding-bottom: clamp(2rem, 1.231rem + 3.08vw, 4rem);
}

/* 48px min and 96px max */

.spacer-md,
	.spacer-t-md {
  padding-top: clamp(3rem, 1.846rem + 4.62vw, 6rem);
}

.spacer-md,
	.spacer-b-md {
  padding-bottom: clamp(3rem, 1.846rem + 4.62vw, 6rem);
}

/* 64px min and 128px max */

.spacer-lg,
	.spacer-t-lg {
  padding-top: clamp(4rem, 2.462rem + 6.15vw, 8rem);
}

.spacer-lg,
	.spacer-b-lg {
  padding-bottom: clamp(4rem, 2.462rem + 6.15vw, 8rem);
}

/* 96px min and 192px max */

/* XL is not quote the same scale as the others, it's slightly less */

.spacer-xl,
	.spacer-t-xl {
  padding-top: clamp(6rem, 3.692rem + 9.23vw, 12rem);
}

.spacer-xl,
	.spacer-b-xl {
  padding-bottom: clamp(6rem, 3.692rem + 9.23vw, 12rem);
}

/* Left and Right padding for iPhones, this pushes content in and away from the notch */

.safe-area-x {
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}

/* Adds extra padding for iPhones to avoid the UI bar at the bottom */

.safe-area-bottom {
  padding-bottom: env(safe-area-inset-bottom);
}

/* Various horizontal spacer classes typically used on sections of content */

/* Calculate fluid sizing with https://min-max-calculator.9elements.com or https://chrisburnell.com/clamp-calculator/ */

/* It's clamped to a min viewport of 320px and a max of 1280px */

@font-face {
  font-family: 'Manrope';

  src: url('/fonts/manrope/Manrope[wght].woff2') format('woff2'),
       url('/fonts/manrope/Manrope[wght].ttf') format('truetype');

  font-weight: 200 800;

  font-display: swap;

  font-style: normal;
}

@font-face {
  font-family: 'Interphases';

  font-style: normal;

  font-weight: 100 900;

  font-stretch: 100%;

  font-display: swap;

  src: url('/fonts/interphases/TT_Interphases_Pro_Variable.woff2') format('woff2'),
			 url('/fonts/interphases/TT_Interphases_Pro_Variable.woff') format('woff'),
			 url('/fonts/interphases/TT_Interphases_Pro_Variable.ttf') format('truetype');
}

/* @keyframes fadeIn {
	0% {
		opacity: 0;
	}
	50% {
		opacity: 0.8;
	}
	100% {
		opacity: 1;
	}
}

#main-content {
	animation: fadeIn 2000ms ease-out 250ms 1 normal both;
} */

@media (prefers-reduced-motion: no-preference) {
  @supports (animation-timeline: scroll()) {
    /* @keyframes imageOut {
			from {
				filter: saturate(1);
				opacity: 0.85;
			}
			to {
				filter: saturate(0);
				opacity: 0;
			}
		}

		@media screen(md) {
			@keyframes imageOut {
				from {
					filter: saturate(1);
					opacity: 0.85;
				}
				to {
					filter: saturate(0);
					opacity: 0.6;
				}
			}
		}

		#ryan {
			animation: imageOut linear both;
			animation-timeline: scroll(block);
			animation-range: 0 theme(width.60);
			view-timeline-axis: block;
		}

		@media screen(md) {
			#ryan {
				animation-range: 0 25vh;
			}
		} */
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    .details > * {
      animation: fadeIn linear both;
      animation-timeline: view(block);
      animation-range: 20px 200px;
    }
  }
}

.after\:block::after {
  content: var(--tw-content);
  display: block;
}

.after\:pb-\[clamp\(8rem\2c -14rem\+45vh\2c 40rem\)\]::after {
  content: var(--tw-content);
  padding-bottom: clamp(8rem,-14rem + 45vh,40rem);
}

.after\:pb-\[clamp\(8rem\2c -14rem\+50vh\2c 40rem\)\]::after {
  content: var(--tw-content);
  padding-bottom: clamp(8rem,-14rem + 50vh,40rem);
}

@media (hover: hover) and (pointer: fine) {
  .hover\:text-brand-300:hover {
    color: #4291F5;
  }

  .hover\:decoration-brand-500:hover {
    text-decoration-color: #084796;
  }
}

@media not all and (min-width: 768px) {
  .max-md\:top-0 {
    top: 0px;
  }

  .max-md\:mt-72 {
    margin-top: 18rem;
  }

  .max-md\:mt-\[50svh\] {
    margin-top: 50svh;
  }
}

@media (min-width: 768px) {
  .md\:inset-y-4 {
    top: 1rem;
    bottom: 1rem;
  }

  .md\:left-4 {
    left: 1rem;
  }

  .md\:ml-auto {
    margin-left: auto;
  }

  .md\:h-12 {
    height: 3rem;
  }

  .md\:h-\[calc\(100\%-2rem\)\] {
    height: calc(100% - 2rem);
  }

  .md\:w-1\/2 {
    width: 50%;
  }

  .md\:w-\[calc\(50\%-2rem\)\] {
    width: calc(50% - 2rem);
  }

  .md\:rounded-lg {
    border-radius: 0.5rem;
  }
}

@media (min-width: 1024px) {
  .lg\:top-12 {
    top: 3rem;
  }

  .lg\:mb-12 {
    margin-bottom: 3rem;
  }

  .lg\:p-12 {
    padding: 3rem;
  }

  .lg\:pb-12 {
    padding-bottom: 3rem;
  }

  .lg\:pb-48 {
    padding-bottom: 12rem;
  }

  .lg\:after\:pb-\[clamp\(8rem\2c -14rem\+58svh\2c 40rem\)\]::after {
    content: var(--tw-content);
    padding-bottom: clamp(8rem,-14rem + 58svh,40rem);
  }
}

.\[\&_p\]\:max-w-\[50ch\] p {
  max-width: 50ch;
}
